[metadata]
name = specutils
author = Specutils Developers
author_email = coordinators@astropy.org
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://specutils.readthedocs.io/
description = Package for spectroscopic astronomical data
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = astropy/specutils

[options]
zip_safe = False
packages = find:
python_requires = >=3.7
setup_requires = setuptools_scm
install_requires =
    astropy>=4.1
    gwcs!=0.16.0
    scipy
    asdf>=2.5
    ndcube@git+https://github.com/sunpy/ndcube.git@947799ea213728d6215cb791508ef186ca53b24f

[options.extras_require]
test =
    pytest-astropy
    pytest-cov
    matplotlib
    graphviz
    coverage
    asdf
    spectral-cube
docs =
    sphinx-astropy
    matplotlib
    graphviz

[options.package_data]
specutils = data/*

[options.entry_points]
asdf_extensions =
    specutils = specutils.io.asdf.extension:SpecutilsExtension

[tool:pytest]
testpaths = "specutils" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
asdf_schema_root = specutils/io/asdf/schemas
asdf_schema_tests_enabled = true

[coverage:run]
omit =
    specutils/_astropy_init*
    specutils/conftest.py
    specutils/*setup_package*
    specutils/tests/*
    specutils/*/tests/*
    specutils/extern/*
    specutils/version*
    */specutils/_astropy_init*
    */specutils/conftest.py
    */specutils/*setup_package*
    */specutils/tests/*
    */specutils/*/tests/*
    */specutils/extern/*
    */specutils/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
