# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

stage: Comprehensive tests


addons:
    apt:
        packages:
            - graphviz

env:
    global:

        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - PYTHON_VERSION=3.6
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=dev
        - MAIN_CMD='python setup.py'
        - SETUP_CMD='test --remote-data=any'
        - PIP_DEPENDENCIES='gwcs scipy matplotlib'
        - EVENT_TYPE='pull_request push'
        - CONDA_DEPENDENCIES='pytest-remotedata'
        - GWCS_DEV="git+https://github.com/spacetelescope/gwcs.git#egg=gwcs"
        - ASDF_DEV="git+https://github.com/spacetelescope/asdf.git#egg=asdf"


stages:
   # Do the style check and a single test job, don't proceed if it fails
   - name: Initial tests
   # Test docs, astropy dev, and without optional dependencies
   - name: Comprehensive tests
   # These will only run when cron is opted in
   - name: Cron tests
     if: type = cron

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:
        # Make sure that egg_info works without dependencies
        - stage: Initial tests
          env: PYTHON_VERSION=3.7 SETUP_CMD='egg_info'

        - stage: Initial tests
          os: linux
          env: PYTHON_VERSION=3.7

        # Try MacOS X
        - os: osx
          env: SETUP_CMD='test --remote-data=any'

        # Do a coverage test.
        - os: linux
          env: SETUP_CMD='test --coverage --remote-data=any'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env: SETUP_CMD='build_docs -w'
               PIP_DEPENDENCIES='gwcs scipy matplotlib sphinx-astropy'

        # Try all python versions and Numpy versions. Since we can assume that
        # the Numpy developers have taken care of testing Numpy with different
        # versions of Python, we can vary Python and Numpy versions at the same
        # time.

        - os: linux
          env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.15
        - os: linux
          env: NUMPY_VERSION=1.14

        # Do a PEP8 test with pycodestyle
        - stage: Initial tests
          os: linux
          env: MAIN_CMD='pycodestyle specutils --count'
               SETUP_CMD=''

        # Try development version of Astropy
        - os: linux
          env: ASTROPY_VERSION=dev EVENT_TYPE='pull_request push cron'
               PIP_DEPENDENCIES="$GWCS_DEV $ASDF_DEV scipy matplotlib"

    allow_failures:
        # Try development version of Astropy
        - os: linux
          env: ASTROPY_VERSION=dev EVENT_TYPE='pull_request push cron'
               PIP_DEPENDENCIES="$GWCS_DEV $ASDF_DEV scipy matplotlib"


install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

script:
   - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == *coverage* ]]; then coveralls --rcfile='specutils/tests/coveragerc'; fi
